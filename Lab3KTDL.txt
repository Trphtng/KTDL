Student@B19M24 MINGW64 ~ (master)
$ cd T:

Student@B19M24 MINGW64 /t (master)
$ git clone https://github.com/Trphtng/KTDL.git
Cloning into 'KTDL'...
remote: Enumerating objects: 7, done.
remote: Counting objects: 100% (7/7), done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 7 (delta 1), reused 4 (delta 1), pack-reused 0 (from 0)
Receiving objects: 100% (7/7), 12.16 MiB | 737.00 KiB/s, done.
Resolving deltas: 100% (1/1), done.

Student@B19M24 MINGW64 /t (master)
$ cd KTDL

Student@B19M24 MINGW64 /t/KTDL (main)
$ git add -A

Student@B19M24 MINGW64 /t/KTDL (main)
$ ls
23697331_NguyenTruongPhat_lab01_ex.ipynb  abcxyz.txt
IDE-materials-20250111T082515Z-001.zip

Student@B19M24 MINGW64 /t/KTDL (main)
$ ls
23697331_NguyenTruongPhat_lab01_ex.ipynb  abcxyz.txt
IDE-materials-20250111T082515Z-001.zip    tsttst.txt

Student@B19M24 MINGW64 /t/KTDL (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        tsttst.txt

nothing added to commit but untracked files present (use "git add" to track)

Student@B19M24 MINGW64 /t/KTDL (main)
$ git add -A

Student@B19M24 MINGW64 /t/KTDL (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   tsttst.txt


Student@B19M24 MINGW64 /t/KTDL (main)
$ git push origin main
Everything up-to-date

Student@B19M24 MINGW64 /t/KTDL (main)
$ git commit -m "heheh"
[main 18ff0fd] heheh
 1 file changed, 1 insertion(+)
 create mode 100644 tsttst.txt

Student@B19M24 MINGW64 /t/KTDL (main)
$ git push origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 20 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 275 bytes | 275.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/Trphtng/KTDL.git
   462dc24..18ff0fd  main -> main

Student@B19M24 MINGW64 /t/KTDL (main)
$ git branch
* main

Student@B19M24 MINGW64 /t/KTDL (main)
$ git add newfeature.py
fatal: pathspec 'newfeature.py' did not match any files

Student@B19M24 MINGW64 /t/KTDL (main)
$ git add new_feature.py
fatal: pathspec 'new_feature.py' did not match any files

Student@B19M24 MINGW64 /t/KTDL (main)
$ git add hehehehe.txt

Student@B19M24 MINGW64 /t/KTDL (main)
$ ls
23697331_NguyenTruongPhat_lab01_ex.ipynb  abcxyz.txt    tsttst.txt
IDE-materials-20250111T082515Z-001.zip    hehehehe.txt

Student@B19M24 MINGW64 /t/KTDL (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   hehehehe.txt


Student@B19M24 MINGW64 /t/KTDL (main)
$ git branch
* main

Student@B19M24 MINGW64 /t/KTDL (main)
$ git checkout --b
error: unknown option `b'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --guess               second guess 'git checkout <no-such-branch>' (default)
    --overlay             use overlay mode (default)
    -q, --quiet           suppress progress reporting
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting
    -m, --merge           perform a 3-way merge with the new branch
    --conflict <style>    conflict style (merge or diff3)
    -d, --detach          detach HEAD at named commit
    -t, --track           set upstream info for new branch
    -f, --force           force checkout (throw away local modifications)
    --orphan <new-branch>
                          new unparented branch
    --overwrite-ignore    update ignored files (default)
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


Student@B19M24 MINGW64 /t/KTDL (main)
$ git checkout -b
error: switch `b' requires a value

Student@B19M24 MINGW64 /t/KTDL (main)
$ git checkout -b "heheh"
Switched to a new branch 'heheh'

Student@B19M24 MINGW64 /t/KTDL (heheh)
$ git branch
* heheh
  main

Student@B19M24 MINGW64 /t/KTDL (heheh)
$ git merge main
Already up to date.

Student@B19M24 MINGW64 /t/KTDL (heheh)
$ git branch
* heheh
  main

Student@B19M24 MINGW64 /t/KTDL (heheh)
$ git heheh
git: 'heheh' is not a git command. See 'git --help'.

Student@B19M24 MINGW64 /t/KTDL (heheh)
$ git merge heheh
Already up to date.

Student@B19M24 MINGW64 /t/KTDL (heheh)
$ git branch
* heheh
  main

Student@B19M24 MINGW64 /t/KTDL (heheh)
$ git push orgin heheh
fatal: 'orgin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

Student@B19M24 MINGW64 /t/KTDL (heheh)
$ git push origin heheh
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'heheh' on GitHub by visiting:
remote:      https://github.com/Trphtng/KTDL/pull/new/heheh
remote:
To https://github.com/Trphtng/KTDL.git
 * [new branch]      heheh -> heheh

Student@B19M24 MINGW64 /t/KTDL (heheh)
$ git
